[{"authors":null,"categories":null,"content":"Варвара Кабанова родилась в городе Брянске в марте 2004 года. С самого малого возраста ей очень нравилось рисовать и разукрашивать все на своем пути. Окончила художественную школу, где много времени проводила, изучая графику и живопись. В 2021 году выпустилась из Гимназии №7, где обучалась в физико-математическом классе.\nНесмотря на столь большое различие в интересах, она сочетает в себе как творческое, так и техническое начало\n  Download my resumé.\n","date":1372636800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1372636800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Варвара Кабанова родилась в городе Брянске в марте 2004 года. С самого малого возраста ей очень нравилось рисовать и разукрашивать все на своем пути. Окончила художественную школу, где много времени проводила, изучая графику и живопись.","tags":null,"title":"Варвара Кабанова","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://vdkabanova.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Варвара Кабанова"],"categories":[],"content":"Язык разметки с простым ненавязчивым синтаксисом\nA облегченный язык разметки (LML ), также называемый простым или гуманным языком разметки , представляет собой язык разметки с простым, ненавязчивым синтаксисом . Он разработан таким образом, чтобы его было легко писать с использованием любого общего и легко читать в необработанном виде. Облегченные языки разметки используются в приложениях, где может потребоваться прочитать необработанный документ, а также окончательный визуализированный вывод.\nНапример, человек, загружающий библиотеку программного обеспечения, может предпочесть читать документацию в текстовом редакторе, а не в веб-браузере. Еще одно приложение для таких языков - обеспечение ввода данных в веб-публикациях , таких как веб-журналы и вики , где интерфейс ввода представляет собой простой текстовое поле . Серверное программное обеспечение затем преобразует ввод в общий язык разметки документов , например HTML .\nИстория\nОблегченные языки разметки изначально использовались на текстовых дисплеях, которые не могли отображать символы, выделенные курсивом или жирный , поэтому пришлось разработать неформальные методы передачи этой информации. Этот выбор форматирования, естественно, был применен к обычным текстовым сообщениям электронной почты. Консольные браузеры также могут прибегать к аналогичным соглашениям об отображении.\nВ 1986 году международный стандарт SGML предоставил средства для определения и анализа облегченных языков разметки с использованием грамматик и импликации тегов. 1998 W3C XML - это профиль SGML, в котором эти возможности отсутствуют. Однако определение типа документа (DTD) SGML для любого из перечисленных ниже языков неизвестно.\nТипы\nЛегкие языки разметки можно разделить на категории по типам их тегов. Подобно HTML (полужирный ), в некоторых языках используются именованные элементы, которые имеют общий формат для начальных и конечных тегов (например, BBCode[b] жирный [ / b] ), тогда как правильные упрощенные языки разметки ограничены ASCII -только знаками препинания и другими небуквенными символами для тегов, но некоторые также смешивают оба стиля (например, Textile bq. ) или разрешить встроенный HTML (например, Markdown ), возможно, расширенный пользовательскими элементами (например, MediaWiki source ).\nБольшинство языков различают разметку для строк или блоков и для более коротких отрезков текста, но некоторые поддерживают только встроенную разметку.\nНекоторые языки разметки предназначены для определенной цели, например, для документирования компьютерного кода (например, POD , RD) или для преобразования в определенный выходной формат (обычно HTML) и ничего больше, другие более вообще в приложении. Сюда входит, ориентированы ли они на текстовое представление или на сериализацию данных.\nЯзыки, ориентированные на представление, включают AsciiDoc , atx , BBCode, креольский , Crossmark, Epytext , Haml , JsonML , MakeDoc , Markdown, Org-mode , POD, reST , RD, Setext , SiSU , SPIP , Xupl , Texy! , Текстиль , txt2tags , UDO и Wikitext .\nЯзыки, ориентированные на сериализацию данных, включают Curl (гомоиконный, но также читает JSON; каждый объект сериализуется), JSON и YAML .\n","date":1651760453,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651760453,"objectID":"122591be03ff19b49a97c0378f58bb18","permalink":"https://vdkabanova.github.io/post/post4/","publishdate":"2022-05-05T17:20:53+03:00","relpermalink":"/post/post4/","section":"post","summary":"Язык разметки с простым ненавязчивым синтаксисом\nA облегченный язык разметки (LML ), также называемый простым или гуманным языком разметки , представляет собой язык разметки с простым, ненавязчивым синтаксисом . Он разработан таким образом, чтобы его было легко писать с использованием любого общего и легко читать в необработанном виде.","tags":[],"title":"Легковесные языки разметки","type":"post"},{"authors":["Варвара Кабанова"],"categories":[],"content":"Вступление\nМаленький рецепт, который будет полезен при создании динамических отчетов.\nДостаточно часто встречается ситуация, когда размер и содержание отчетной формы будет зависеть от состава переданных на вход данных. Речь идет именно о story-telling отчете, а не о простом выводе таблицы. В этом случае, в зависимости от содержания входных данных, могут появляться или исчезать отдельные пункты, графики, таблицы, текст.\nЧто будет делать классический Excel-Word аналитик? Под каждый новый запрос делать кастомный отчет и сохранять его в отдельный файл. Но можно заглянуть немного под капот и заставить компьютер делать все самостоятельно.\nR Markdown позволяет все это выполнить в элегантной форме. Некоторые технические детали ниже.\nОсновная идея\nУ нас есть данные, содержание которых может меняться. Например, надо строить отчет по машинам, развозящим грузы (пример абстрактный). Количество и номера машин, выходящих в рейс, каждый день разные, но сводка по каждой машине по своей структуре одинакова. Будем отталкиваться от этого.\nR Markdown выполняется в несколько проходов. При этом из Rmd сначала формируется .md, а потом из него формируется выходное представление, наиболее популярным является html формат.\nИтого, намечаются 2 варианта.\n  Можно на этапе компиляции отчета вставить в компилируемый .Rmd нужные блоки (собранные или шаблонизированные).\n  Можно на этапе компиляции отчета вставить в промежуточный .md нужные markdown вставки.\n  Реализация\nНиже просто пример кода, который каждый желающий может запустить у себя на машине. Он охватывает реализации обоих примеров и минимален, чтобы передать суть.\n  Динамически вставляем гиперссылки, получаемые из внешнего источника.\n  Динамически формируем разделы документов на основании данных.\n  ","date":1651760453,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651760453,"objectID":"53a087908899411dab3858677c03ade5","permalink":"https://vdkabanova.github.io/post/post6/","publishdate":"2022-05-05T17:20:53+03:00","relpermalink":"/post/post6/","section":"post","summary":"Вступление\nМаленький рецепт, который будет полезен при создании динамических отчетов.\nДостаточно часто встречается ситуация, когда размер и содержание отчетной формы будет зависеть от состава переданных на вход данных. Речь идет именно о story-telling отчете, а не о простом выводе таблицы.","tags":[],"title":"Создание отчета","type":"post"},{"authors":["Варвара Кабанова"],"categories":[],"content":"Что такое «система контроля версий» и почему это важно?\nСистема управления версиями (Version Control System, VCS) — это программное обеспечение для облегчения работы с изменяющейся информацией. Система управления версиями позволяет хранить несколько версий одного и того же документа, при необходимости возвращаться к более ранним версиям, определять, кто и когда сделал то или иное изменение, и многое другое. Такие системы наиболее широко используются при разработке программного обеспечения для хранения исходных кодов разрабатываемой программы.\nGIT — распределённая система управления версиями, созданная Линусом Торвальдсом для управления разработкой ядра Linux и в настоящее время получившая очень широкое распространение в среде разработчиков программного обеспечения.\nВ GIT используется распределённая модель вместо традиционной клиент-серверной. Таким образом, репозитории GIT не нуждаются в централизованном хранилище: вся история изменения документов хранится на каждом компьютере, в локальном хранилище, и при необходимости отдельные фрагменты истории локального хранилища синхронизируются с аналогичным хранилищем на другом компьютере.\nНа сегодняшний день, GIT стал стандартной системой управления версиями для очень многих разработчиков, а хостинг исходных кодов GitHub — самым крупным подобным сервисом. Примерами проектов, использующих Git, являются ядро Linux, Android, Ruby on Rails, Drupal, Wine, Chromium, Compiz Fusion, jQuery, PHP, MediaWiki и некоторые дистрибутивы Linux\nЗачем новичку учить Git?\nGit используется в большинстве компаний, где над проектом работает хотя бы два разработчика:\n Новый человек приходит в компанию и клонирует репозиторий проекта на ПК. Получает задачу, создаёт новую ветку и пишет код. Когда всё готово — отправляет запрос на добавление кода в master-ветку. Другие разработчики смотрят код, оставляют комментарии и указывают на ошибки. Новичок дорабатывает код, обновляет master-ветку и переходит к следующей задаче.  Это общая схема того, как проходит командная работа в проекте. В ней не учтены правила использования Git, которые каждая команда пишет под себя. Например, у каждой команды свой порядок проверки кода и свои критерии его готовности для добавления в master-ветку.\nЗнание Git и знание правил использования Git в команде — это два разных навыка, которые можно сравнить с умением ездить на автомобиле и знанием правил дорожного движения. Если умеете управлять автомобилем — вам проще сконцентрироваться и быстро выучить правила. С Git аналогичная ситуация: если вы умеете управлять системой контроля версий, то можете сразу влиться в проект, не отвлекаться на второстепенные вещи и сосредоточиться на качестве кода.\n","date":1651760453,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651760453,"objectID":"0c6f6cbe96ac9b1239a629e09477d6d1","permalink":"https://vdkabanova.github.io/post/post2/","publishdate":"2022-05-05T17:20:53+03:00","relpermalink":"/post/post2/","section":"post","summary":"Что такое «система контроля версий» и почему это важно?\nСистема управления версиями (Version Control System, VCS) — это программное обеспечение для облегчения работы с изменяющейся информацией. Система управления версиями позволяет хранить несколько версий одного и того же документа, при необходимости возвращаться к более ранним версиям, определять, кто и когда сделал то или иное изменение, и многое другое.","tags":[],"title":"Управление версиями. Git","type":"post"},{"authors":["Варвара Кабанова"],"categories":["блог"],"content":"На прошлой неделе я выполнила две лабораторные работы (№3, №4) по операционным системам, сделала первую часть индивидуального проекта. Съездила к родителям в родной город.\n","date":1651758667,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651758667,"objectID":"fe859c6266641600992fd6a0d6f11947","permalink":"https://vdkabanova.github.io/post/post1/","publishdate":"2022-05-05T16:51:07+03:00","relpermalink":"/post/post1/","section":"post","summary":"На прошлой неделе я выполнила две лабораторные работы (№3, №4) по операционным системам, сделала первую часть индивидуального проекта. Съездила к родителям в родной город.","tags":["каждая неделя"],"title":"Блог 05/05","type":"post"},{"authors":["Варвара Кабанова"],"categories":["блог"],"content":"На прошлой неделе я выполнила две лабораторные работы (№5, №6) по операционным системам, сделала вторую часть индивидуального проекта. Устроилась на работу, снимала хоккейный матч мирэа-рудн\n","date":1651758667,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651758667,"objectID":"d084acea3d1051f530a6486b095c70b4","permalink":"https://vdkabanova.github.io/post/post3/","publishdate":"2022-05-05T16:51:07+03:00","relpermalink":"/post/post3/","section":"post","summary":"На прошлой неделе я выполнила две лабораторные работы (№5, №6) по операционным системам, сделала вторую часть индивидуального проекта. Устроилась на работу, снимала хоккейный матч мирэа-рудн","tags":["каждая неделя"],"title":"Блог 12/05","type":"post"},{"authors":["Варвара Кабанова"],"categories":["блог"],"content":"На прошлой неделе я выполнила две лабораторные работы (№7, №8) по операционным системам, устроилась на работу\n","date":1651758667,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651758667,"objectID":"918c2ae645793b070e27ace951359a94","permalink":"https://vdkabanova.github.io/post/post5/","publishdate":"2022-05-05T16:51:07+03:00","relpermalink":"/post/post5/","section":"post","summary":"На прошлой неделе я выполнила две лабораторные работы (№7, №8) по операционным системам, устроилась на работу","tags":["каждая неделя"],"title":"Блог 19/05","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://vdkabanova.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://vdkabanova.github.io/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":["Варвара Кабанова","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://vdkabanova.github.io/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]