<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c | Academic</title>
    <link>https://vdkabanova.github.io/tag/c/</link>
      <atom:link href="https://vdkabanova.github.io/tag/c/index.xml" rel="self" type="application/rss+xml" />
    <description>c</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Fri, 27 May 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://vdkabanova.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>c</title>
      <link>https://vdkabanova.github.io/tag/c/</link>
    </image>
    
    <item>
      <title>Язык программирования СИ</title>
      <link>https://vdkabanova.github.io/project/example2/</link>
      <pubDate>Fri, 27 May 2022 00:00:00 +0000</pubDate>
      <guid>https://vdkabanova.github.io/project/example2/</guid>
      <description>&lt;p&gt;C — это достаточно &amp;ldquo;древний&amp;rdquo; язык программирования, он сформировался в начале 70-х. Не смотря на это, C — живой язык в том смысле, что он активно применяется в настоящее время. Он был придуман, использовался и используется для написания частей программного кода Unix-подобных операционных систем. Также на нем пишут утилиты, компиляторы и реже прикладные программы. Поэтому C называют системным языком программирования.&lt;/p&gt;
&lt;p&gt;Его живучесть можно объяснить тем, что принципы работы операционных систем относительно универсальны, они не подвержены тому прогрессу и разнообразию, которые можно наблюдать в среде десктопного и мобильного ПО, Web-приложений. C не является языком достаточно высокого уровня, он ближе к архитектуре компьютера. В результате программы на C получаются более быстрыми.&lt;/p&gt;
&lt;p&gt;C в чистом виде не поддерживает объектно-ориентированного программирования (хотя есть библиотека, в которой эмулируются возможности ООП). Поддержка ООП реализована в C++. Хотя последний возник на основе языка C, он не является его &amp;ldquo;продолжением&amp;rdquo;, а представляет собой отдельный язык, который можно изучать, не зная C. Однако изучение C полезно перед знакомством с его &amp;ldquo;продвинутым младшим братом&amp;rdquo;, т.к. синтаксис языков похож, C не перегружает мозг начинающего программиста сверхвозможностями и приучает к пониманию сути происходящего.&lt;/p&gt;
&lt;p&gt;Подходит ли C для первого знакомства с программированием? Если вы не обучаетесь в вузе по специальности, связанной с IT, то нет. C предполагает понимание организации и принципов работы аппаратного обеспечения, в частности – памяти. Здесь многое делается с помощью указателей, они играют ключевую роль; эта тема достаточно сложная для понимания и обычно не изучается в школе.&lt;/p&gt;
&lt;p&gt;Конечно, с помощью C можно изучать основы программирования и не изучать при этом указатели. Однако человек будет думать, что знает C, мало зная о нем по существу. Язык C был создан разбирающимися в устройстве «железа» профессиональными программистами для написания операционной системы UNIX. Его не задумывали как язык для обучения начинающих.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
