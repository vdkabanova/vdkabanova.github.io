<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Academic</title>
    <link>https://vdkabanova.github.io/ru/post/</link>
      <atom:link href="https://vdkabanova.github.io/ru/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ru</language><lastBuildDate>Thu, 05 May 2022 17:20:53 +0300</lastBuildDate>
    <image>
      <url>https://vdkabanova.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://vdkabanova.github.io/ru/post/</link>
    </image>
    
    <item>
      <title>Легковесные языки разметки</title>
      <link>https://vdkabanova.github.io/ru/post/post4/</link>
      <pubDate>Thu, 05 May 2022 17:20:53 +0300</pubDate>
      <guid>https://vdkabanova.github.io/ru/post/post4/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Язык разметки с простым ненавязчивым синтаксисом&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A облегченный язык разметки (LML ), также называемый простым или гуманным языком разметки , представляет собой язык разметки с простым, ненавязчивым синтаксисом . Он разработан таким образом, чтобы его было легко писать с использованием любого общего и легко читать в необработанном виде. Облегченные языки разметки используются в приложениях, где может потребоваться прочитать необработанный документ, а также окончательный визуализированный вывод.&lt;/p&gt;
&lt;p&gt;Например, человек, загружающий библиотеку программного обеспечения, может предпочесть читать документацию в текстовом редакторе, а не в веб-браузере. Еще одно приложение для таких языков - обеспечение ввода данных в веб-публикациях , таких как веб-журналы и вики , где интерфейс ввода представляет собой простой текстовое поле . Серверное программное обеспечение затем преобразует ввод в общий язык разметки документов , например HTML .&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;История&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Облегченные языки разметки изначально использовались на текстовых дисплеях, которые не могли отображать символы, выделенные курсивом или жирный , поэтому пришлось разработать неформальные методы передачи этой информации. Этот выбор форматирования, естественно, был применен к обычным текстовым сообщениям электронной почты. Консольные браузеры также могут прибегать к аналогичным соглашениям об отображении.&lt;/p&gt;
&lt;p&gt;В 1986 году международный стандарт SGML предоставил средства для определения и анализа облегченных языков разметки с использованием грамматик и импликации тегов. 1998 W3C XML - это профиль SGML, в котором эти возможности отсутствуют. Однако определение типа документа (DTD) SGML для любого из перечисленных ниже языков неизвестно.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Типы&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Легкие языки разметки можно разделить на категории по типам их тегов. Подобно HTML (полужирный ), в некоторых языках используются именованные элементы, которые имеют общий формат для начальных и конечных тегов (например, BBCode[b] жирный [ / b] ), тогда как правильные упрощенные языки разметки ограничены ASCII -только знаками препинания и другими небуквенными символами для тегов, но некоторые также смешивают оба стиля (например, Textile bq. ) или разрешить встроенный HTML (например, Markdown ), возможно, расширенный пользовательскими элементами (например, MediaWiki source ).&lt;/p&gt;
&lt;p&gt;Большинство языков различают разметку для строк или блоков и для более коротких отрезков текста, но некоторые поддерживают только встроенную разметку.&lt;/p&gt;
&lt;p&gt;Некоторые языки разметки предназначены для определенной цели, например, для документирования компьютерного кода (например, POD , RD) или для преобразования в определенный выходной формат (обычно HTML) и ничего больше, другие более вообще в приложении. Сюда входит, ориентированы ли они на текстовое представление или на сериализацию данных.&lt;/p&gt;
&lt;p&gt;Языки, ориентированные на представление, включают AsciiDoc , atx , BBCode, креольский , Crossmark, Epytext , Haml , JsonML , MakeDoc , Markdown, Org-mode , POD, reST , RD, Setext , SiSU , SPIP , Xupl , Texy! , Текстиль , txt2tags , UDO и Wikitext .&lt;/p&gt;
&lt;p&gt;Языки, ориентированные на сериализацию данных, включают Curl (гомоиконный, но также читает JSON; каждый объект сериализуется), JSON и YAML .&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Создание отчета</title>
      <link>https://vdkabanova.github.io/ru/post/post6/</link>
      <pubDate>Thu, 05 May 2022 17:20:53 +0300</pubDate>
      <guid>https://vdkabanova.github.io/ru/post/post6/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Вступление&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Маленький рецепт, который будет полезен при создании динамических отчетов.&lt;/p&gt;
&lt;p&gt;Достаточно часто встречается ситуация, когда размер и содержание отчетной формы будет зависеть от состава переданных на вход данных. Речь идет именно о story-telling отчете, а не о простом выводе таблицы. В этом случае, в зависимости от содержания входных данных, могут появляться или исчезать отдельные пункты, графики, таблицы, текст.&lt;/p&gt;
&lt;p&gt;Что будет делать классический Excel-Word аналитик? Под каждый новый запрос делать кастомный отчет и сохранять его в отдельный файл. Но можно заглянуть немного под капот и заставить компьютер делать все самостоятельно.&lt;/p&gt;
&lt;p&gt;R Markdown позволяет все это выполнить в элегантной форме. Некоторые технические детали ниже.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Основная идея&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;У нас есть данные, содержание которых может меняться. Например, надо строить отчет по машинам, развозящим грузы (пример абстрактный). Количество и номера машин, выходящих в рейс, каждый день разные, но сводка по каждой машине по своей структуре одинакова. Будем отталкиваться от этого.&lt;/p&gt;
&lt;p&gt;R Markdown выполняется в несколько проходов. При этом из Rmd сначала формируется .md, а потом из него формируется выходное представление, наиболее популярным является html формат.&lt;/p&gt;
&lt;p&gt;Итого, намечаются 2 варианта.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Можно на этапе компиляции отчета вставить в компилируемый .Rmd нужные блоки (собранные или шаблонизированные).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Можно на этапе компиляции отчета вставить в промежуточный .md нужные markdown вставки.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Реализация&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ниже просто пример кода, который каждый желающий может запустить у себя на машине. Он охватывает реализации обоих примеров и минимален, чтобы передать суть.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Динамически вставляем гиперссылки, получаемые из внешнего источника.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Динамически формируем разделы документов на основании данных.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Управление версиями. Git</title>
      <link>https://vdkabanova.github.io/ru/post/post2/</link>
      <pubDate>Thu, 05 May 2022 17:20:53 +0300</pubDate>
      <guid>https://vdkabanova.github.io/ru/post/post2/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Что такое «система контроля версий» и почему это важно?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Система управления версиями (Version Control System, VCS) — это программное обеспечение для облегчения работы с изменяющейся информацией. Система управления версиями позволяет хранить несколько версий одного и того же документа, при необходимости возвращаться к более ранним версиям, определять, кто и когда сделал то или иное изменение, и многое другое. Такие системы наиболее широко используются при разработке программного обеспечения для хранения исходных кодов разрабатываемой программы.&lt;/p&gt;
&lt;p&gt;GIT — распределённая система управления версиями, созданная Линусом Торвальдсом для управления разработкой ядра Linux и в настоящее время получившая очень широкое распространение в среде разработчиков программного обеспечения.&lt;/p&gt;
&lt;p&gt;В GIT используется распределённая модель вместо традиционной клиент-серверной. Таким образом, репозитории GIT не нуждаются в централизованном хранилище: вся история изменения документов хранится на каждом компьютере, в локальном хранилище, и при необходимости отдельные фрагменты истории локального хранилища синхронизируются с аналогичным хранилищем на другом компьютере.&lt;/p&gt;
&lt;p&gt;На сегодняшний день, GIT стал стандартной системой управления версиями для очень многих разработчиков, а хостинг исходных кодов GitHub — самым крупным подобным сервисом. Примерами проектов, использующих Git, являются ядро Linux, Android, Ruby on Rails, Drupal, Wine, Chromium, Compiz Fusion, jQuery, PHP, MediaWiki и некоторые дистрибутивы Linux&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Зачем новичку учить Git?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Git используется в большинстве компаний, где над проектом работает хотя бы два разработчика:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Новый человек приходит в компанию и клонирует репозиторий проекта на ПК.&lt;/li&gt;
&lt;li&gt;Получает задачу, создаёт новую ветку и пишет код.&lt;/li&gt;
&lt;li&gt;Когда всё готово — отправляет запрос на добавление кода в master-ветку.&lt;/li&gt;
&lt;li&gt;Другие разработчики смотрят код, оставляют комментарии и указывают на ошибки.&lt;/li&gt;
&lt;li&gt;Новичок дорабатывает код, обновляет master-ветку и переходит к следующей задаче.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Это общая схема того, как проходит командная работа в проекте. В ней не учтены правила использования Git, которые каждая команда пишет под себя. Например, у каждой команды свой порядок проверки кода и свои критерии его готовности для добавления в master-ветку.&lt;/p&gt;
&lt;p&gt;Знание Git и знание правил использования Git в команде — это два разных навыка, которые можно сравнить с умением ездить на автомобиле и знанием правил дорожного движения. Если умеете управлять автомобилем — вам проще сконцентрироваться и быстро выучить правила. С Git аналогичная ситуация: если вы умеете управлять системой контроля версий, то можете сразу влиться в проект, не отвлекаться на второстепенные вещи и сосредоточиться на качестве кода.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Языки научного программирования</title>
      <link>https://vdkabanova.github.io/ru/post/post8/</link>
      <pubDate>Thu, 05 May 2022 17:20:53 +0300</pubDate>
      <guid>https://vdkabanova.github.io/ru/post/post8/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Программирование в науке: актуальность и востребованность&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Программирование часто упоминают в прикладном контексте. Кажется, с его помощью создают только мобильные приложения, интернет-системы и спецэффекты для кино. Но первоначально программирование предназначалось для решения научных задач. Кроме того, программирование само — наука, узнать о которой будет полезно тем, кто решил связать карьеру с компьютерной разработкой.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Общая информация&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Научное программирование — высокоориентированный стиль программирования для научных расчетов. От других видов программирования его отличают предельные корректность и стабильность конечного продукта, строгое разделение научной и интерфейсной частей, индивидуальность алгоритмов, а также преобладание эффективности над универсальностью.&lt;/p&gt;
&lt;p&gt;Научное программирование лежит в основе любого современного глобального исследования. Все передовые технологии — от квантовых компьютеров до космических программ — были бы невозможны без специалистов в области научного программирования, способных предоставить ученым надежный и точный инструмент для совершения открытий.&lt;/p&gt;
&lt;p&gt;Ряд отраслей науки непосредственно зависят от уровня развития научного программирования. Так, своего исполнения ждут беспилотный транспорт, «умные» системы управления городским и сельским хозяйством, фондовыми биржами; ждут робототехника, генная инженерия, искусственный интеллект, превосходящий возможности человека.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Специализация&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ученые используют различные языки программирования, выбор которых зависит от типа задачи и предпочтений автора. Исторически первым высокоуровневым языком программирования является Fortran, на нем написано много отлаженных библиотек математической статистики и библиотек для решения дифференциальных уравнений, что актуально для экономики и биологии соответственно.&lt;/p&gt;
&lt;p&gt;Более простым синтаксисом обладает Python, также подходящий для программирования математических вычислений. Язык Python привлекается для обработки данных в математике, физике, экономике, биологии, химии и умеет работать с некоторыми другими «научными» языками: Fortran, C++, C#.&lt;/p&gt;
&lt;p&gt;В свою очередь C# позволяет программировать на платформе .NET, адаптировать программу к общеязыковой исполняющей среде (CLR) и ускорить разработку в рамках оперативных научных сессий.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Будущее профессии программист-ученый&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Программирование двигает науку, которая двигает технический прогресс. Изобретения, которые считались революционными вчера, в XXI веке служат бытовым потребностям: СВЧ-печь, мобильный телефон, 8-битная домашняя ЭВМ. От программиста-ученого зависит, каких вершин достигнет наука сегодня и какие из них завтра войдут в каждый дом.&lt;/p&gt;
&lt;p&gt;В руках программиста-ученого находятся инструменты не только для развития промышленности, но и для повышения общего качества жизни. Такой специалист увеличивает прогностическую функцию человечества, помогая предугадывать и предотвращать климатические, финансовые, гуманитарные катастрофы.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Где научиться программированию?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Освоить программирование можно как и где угодно. Специализированная литература, очное обучение, интернет-площадки — все эти ресурсы способны обеспечить начинающего программиста базой знаний, достаточной для самостоятельного творчества и повышения квалификации, в том числе в русле научной разработки.&lt;/p&gt;
&lt;p&gt;Портал GeekBrains предлагает пользователям бесплатные курсы для новичков в программировании. Дополнительно проводится подготовка по 15 профессиям, наиболее востребованным на рынке труда: программист Python, разработчик C#, Senior Web Developer и другие. По завершении каждого курса выпускникам гарантируется стажировка от GeekBrains&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Блог 05/05</title>
      <link>https://vdkabanova.github.io/ru/post/post1/</link>
      <pubDate>Thu, 05 May 2022 16:51:07 +0300</pubDate>
      <guid>https://vdkabanova.github.io/ru/post/post1/</guid>
      <description>&lt;p&gt;На прошлой неделе я выполнила две лабораторные работы (№3, №4) по операционным системам, сделала первую часть индивидуального проекта. Съездила к родителям в родной город.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Блог 12/05</title>
      <link>https://vdkabanova.github.io/ru/post/post3/</link>
      <pubDate>Thu, 05 May 2022 16:51:07 +0300</pubDate>
      <guid>https://vdkabanova.github.io/ru/post/post3/</guid>
      <description>&lt;p&gt;На прошлой неделе я выполнила две лабораторные работы (№5, №6) по операционным системам, сделала вторую часть индивидуального проекта. Устроилась на работу, снимала хоккейный матч мирэа-рудн&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Блог 19/05</title>
      <link>https://vdkabanova.github.io/ru/post/post5/</link>
      <pubDate>Thu, 05 May 2022 16:51:07 +0300</pubDate>
      <guid>https://vdkabanova.github.io/ru/post/post5/</guid>
      <description>&lt;p&gt;На прошлой неделе я выполнила две лабораторные работы (№7, №8) по операционным системам, устроилась на работу&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Блог 27/05</title>
      <link>https://vdkabanova.github.io/ru/post/post7/</link>
      <pubDate>Thu, 05 May 2022 16:51:07 +0300</pubDate>
      <guid>https://vdkabanova.github.io/ru/post/post7/</guid>
      <description>&lt;p&gt;На прошлой неделе я выполнила две лабораторные работы (№9, №10) по операционным системам, cходила в большой и малый театр&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
